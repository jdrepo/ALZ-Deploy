name: 3. Deploy NVA OpnSense to ALZ environment 

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy after preview'
        default: false
        type: boolean
      environment:
        default: "canary"
        required: true
        type: string
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      wipeAfterDeploy:
        default: false
        type: boolean

  workflow_call:
    inputs:
      deploy:
        description: 'Deploy after preview'
        default: false
        type: boolean
      environment:
        default: "canary"
        required: true
        type: string
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      wipeAfterDeploy:
        default: false
        type: boolean
    secrets:
      CONNECTIVITY_SUB_ID:
        required: false
      AZURE_CLIENT_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
env:
  ManagementGroupPrefix: ${{inputs.managementGroupPrefix}}
  ManagementGroupSuffix: "-${{inputs.environment}}"
  ConnectivitySubscriptionId: ${{secrets.CONNECTIVITY_SUB_ID}}
  hubNetworkResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-hub-networking-001"
  Location: ${{inputs.location}}
  runNumber: ${{ github.run_number }}

permissions:
  id-token: write
  contents: read

jobs:
  validate_preview_opns:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    name: Deploy NVA OpnSense - Validation and Preview
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        path: 'ALZ-Deploy'
    - name: Checkout Repo bicep-registry-modules
      uses: actions/checkout@v4
      with:
          repository: Azure/bicep-registry-modules
          path: 'bicep-registry-modules'
    - name: Azure Login with OIDC
      uses: azure/login@v2
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Get existing resources
      id: get_resources
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account set -s "${{env.ConnectivitySubscriptionId}}"
          hubNetworkName=$(jq -r .parameters.parHubNetworkName.value ./ALZ-Deploy/infra-as-code/bicep/modules/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.environment}}.json) 
          hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.hubNetworkResourceGroupName }} --name $hubNetworkName --query id)
          echo "$hubNetworkResourceId"
          echo "hubNetworkResourceId=$hubNetworkResourceId" >> $GITHUB_OUTPUT
    - name: Deploy NVA OpnSense - Validation
      id: deploy_opns_validation
      uses: azure/arm-deploy@v2
      with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubscriptionId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.hubNetworkResourceGroupName }}
          template: ./ALZ-Deploy/infra-as-code/bicep/modules/opnsense/opnsense.bicep
          parameters: >-
            ./ALZ-Deploy/infra-as-code/bicep/modules/opnsense/parameters/opnsense.parameters.${{inputs.environment}}.json
            parVirtualNetworkResourceId=${{steps.get_resources.outputs.hubNetworkResourceId}}
          deploymentName: deploy_opnsense_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
    - name: Deploy NVA OpnSense - Preview
      id: deploy_opns_preview
      uses: azure/arm-deploy@v2
      with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubscriptionId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.hubNetworkResourceGroupName }}
          template: ./ALZ-Deploy/infra-as-code/bicep/modules/opnsense/opnsense.bicep
          parameters: >-
            ./ALZ-Deploy/infra-as-code/bicep/modules/opnsense/parameters/opnsense.parameters.${{inputs.environment}}.json
            parVirtualNetworkResourceId=${{steps.get_resources.outputs.hubNetworkResourceId}}
          deploymentName: deploy_opnsense_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"