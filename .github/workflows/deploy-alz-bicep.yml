name: ALZ Bicep deployment pipeline

on:
  push:
    branches:
      - main
    #paths:
    #  - ".github/workflows/deploy-alz.yml"
  workflow_dispatch: {}
env:
  alzBicepRelease: "v0.19.4"
  ManagementGroupPrefix: "alz-bicep"
  ManagementGroupSuffix: "-prod"
  TopLevelManagementGroupDisplayName: "ALZ-Bicep-Prod"
  Location: "germanywestcentral"
  LoggingSubId: ${{ secrets.LOGGING_SUB_ID }}
  IdentitySubId: ${{ secrets.IDENTITY_SUB_ID }}
  LoggingResourceGroupName: "rg-alz-bicep-prod-logging-001"
  MgmtSubId: ${{ secrets.MGMT_SUB_ID }}
  ConnectivitySubId: ${{ secrets.CONNECTIVITY_SUB_ID }}
  HubNetworkResourceGroupName: "rg-alz-bicep-prod-hub-networking-001"
  RoleAssignmentManagementGroupId: "alz-bicep-platform-prod"
  DefenderForCloudEmailSecurityContact: ${{ secrets.DFC_EMAIL_SECURITY_CONTACT }}
  SpokeNetworkSubId: "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
  SpokeNetworkResourceGroupName: "Spoke_Networking_POC"
  runNumber: ${{ github.run_number }}

permissions:
  id-token: write
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run lint job
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Run bicep linter
        run: |
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/managementGroups/managementGroups.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/logging/logging.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/orchestration/mgDiagSettingsAll/mgDiagSettingsAll.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
  validate_base:
    runs-on: ubuntu-latest
    needs: [lint]
    name: Validate - base components
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Validate Deployment 
        id: validate
        shell: bash
        run: |
          az deployment tenant validate --template-file ./main/deploy/main.bicep \
          --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
          --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
          --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
          --parameters parLoggingSubscriptionId="${{ env.LoggingSubId }}" \
          --parameters parLoggingResourceGroupName="${{ env.LoggingResourceGroupName }}" \
          --parameters parConnectivitySubscriptionId=${{ env.ConnectivitySubId }} \
          --parameters parHubNetworkResourceGroupName="${{ env.HubNetworkResourceGroupName }}" \
          --parameters parMgmtSubscriptionId=${{ env.MgmtSubId}} \
          --parameters parIdentitySubscriptionId=${{ env.IdentitySubId}} \
          --parameters parMsDefenderForCloudEmailSecurityContact=${{ env.DefenderForCloudEmailSecurityContact}} \
          --location ${{ env.Location }} --name alz-deployment-${{ env.runNumber }}
  preview_base:
    runs-on: ubuntu-latest
    needs: [validate_base]
    name: Preview - base components 
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Preview Deployment
        id: preview
        shell: bash
        run: |
          az deployment tenant what-if --template-file ./main/deploy/main.bicep \
          --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
          --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
          --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
          --parameters parLoggingSubscriptionId=${{ env.LoggingSubId }} \
          --parameters parLoggingResourceGroupName="${{ env.LoggingResourceGroupName }}" \
          --parameters parConnectivitySubscriptionId=${{ env.ConnectivitySubId }} \
          --parameters parHubNetworkResourceGroupName="${{ env.HubNetworkResourceGroupName}}" \
          --parameters parMgmtSubscriptionId=${{ env.MgmtSubId}} \
          --parameters parIdentitySubscriptionId=${{ env.IdentitySubId}} \
          --parameters parMsDefenderForCloudEmailSecurityContact=${{ env.DefenderForCloudEmailSecurityContact}} \
          --location ${{ env.Location }} --name alz-deployment-${{ env.runNumber }}
  deploy_base:
    runs-on: ubuntu-latest
    needs: [preview_base]
    environment: deploy
    name: Deploy - base components
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deployment
        id: deploy
        shell: bash
        run: |
          az deployment tenant create --template-file ./main/deploy/main.bicep \
          --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
          --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
          --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
          --parameters parLoggingSubscriptionId=${{ env.LoggingSubId }} \
          --parameters parLoggingResourceGroupName="${{ env.LoggingResourceGroupName }}" \
          --parameters parConnectivitySubscriptionId=${{ env.ConnectivitySubId }} \
          --parameters parHubNetworkResourceGroupName="${{ env.HubNetworkResourceGroupName}}" \
          --parameters parMgmtSubscriptionId=${{ env.MgmtSubId}} \
          --parameters parIdentitySubscriptionId=${{ env.IdentitySubId}} \
          --parameters parMsDefenderForCloudEmailSecurityContact=${{ env.DefenderForCloudEmailSecurityContact}} \
          --location ${{ env.Location }} --name alz-deployment-${{ env.runNumber }}
  validate_defaultpolicy:
    runs-on: ubuntu-latest
    needs: [deploy_base]
    name: Validate - Default Policy Assignment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: main
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get logging resources - Validation
        id: get_logging_resources_validation
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name alz-log-analytics --query id)
            dataCollectionRuleVMInsightsId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name alz-ama-vmi-dcr --query id )
            dataCollectionRuleChangeTrackingResourceId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name alz-ama-ct-dcr --query id )
            dataCollectionRuleMDFCSQLId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name alz-ama-mdfcsql-dcr --query id )
            userAssignedManagedIdentityId=$(az identity show --resource-group ${{ env.LoggingResourceGroupName }} --name alz-umi-identity --query id)
            echo "$logAnalyticsWorkspaceResourceId"
            echo "$dataCollectionRuleVMInsightsId"
            echo "$dataCollectionRuleChangeTrackingResourceId"
            echo "$dataCollectionRuleMDFCSQLId"
            echo "$userAssignedManagedIdentityId"
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleVMInsightsId=$dataCollectionRuleVMInsightsId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleChangeTrackingResourceId=$dataCollectionRuleChangeTrackingResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleMDFCSQLId=$dataCollectionRuleMDFCSQLId" >> "$GITHUB_OUTPUT"
            echo "userAssignedManagedIdentityId=$userAssignedManagedIdentityId" >> $GITHUB_OUTPUT
      # - name: Validate Deployment 
      #   id: validate
      #   shell: bash
      #   run: |
      #     az deployment mg validate --template-file ./main/deploy/defaultPolicyAssignment.bicep \
      #     --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
      #     --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
      #     --parameters parMsDefenderForCloudEmailSecurityContact=${{ env.DefenderForCloudEmailSecurityContact}} \
      #     --parameters parLogAnalyticsWorkspaceResourceId="/subscriptions/${{ env.LoggingSubId }}/resourcegroups/${{ env.LoggingResourceGroupName }}/providers/microsoft"
      #     --parameters parDataCollectionRuleVMInsightsResourceId=
      #     --parameters parDataCollectionRuleChangeTrackingResourceId=
      #     --parameters parDataCollectionRuleMDFCSQLResourceId=
      #     --parameters parUserAssignedManagedIdentityResourceId=
      #     --parameters parPrivateDnsResourceGroupId=

