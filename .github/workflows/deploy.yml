# vars.NVA-CANARY:  opnsense-single / no-nva / azfirewall-basic
# vars.VPNGW-CANARY: vpngw-bgp / vpngw-nobgp / no-vpngw
# vars.ONPREM_CANARY: create-onprem-environment / no-onprem-environment
# vars.ONPREMAD_CANARY: create-onprem-domain / no-onprem-domain
# vars.AZUREAD_CANARY: create-identity-domain / use-onprem-domain / no-identity-domain

name: 0. Deploy complete ALZ solution

on:
  workflow_dispatch:
    # inputs:
    #   onprem:
    #     description: 'Onpremise Scenario'
    #     default: 'create-onprem-domain'
    #     type: choice
    #     options:
    #       - create-onprem-environment
    #       - no-onprem-environment
    #   onpremActiveDirectory:
    #     description: 'Onprem Active Directory Scenario'
    #     default: 'create-onprem-domain'
    #     type: choice
    #     options:
    #       - create-onprem-domain
    #       - no-onprem-domain
    #   azureActiveDirectory:
    #     description: 'Azure Active Directory Scenario'
    #     default: 'use-onprem-domain'
    #     type: choice
    #     options:
    #       - use-onprem-domain
    #       - create-identity-domain
    #       - no-identity-domain
permissions:
  id-token: write
  contents: write


jobs:
  alz-deploy-base-canary:
    name: "Deploy ALZ Base Components - Canary"
    uses: ./.github/workflows/deploy-alz-base.yml
    with:
      environment: "canary"
      alzBicepRelease: "v0.22.1"
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      wipeAfterDeploy: false
      nva: ${{vars.NVA_CANARY}}
      vpngw: ${{vars.VPNGW_CANARY}}
    secrets:
      LOGGING_SUB_ID: ${{ secrets.LOGGING_SUB_ID_CANARY }}
      IDENTITY_SUB_ID: ${{ secrets.IDENTITY_SUB_ID_CANARY}}
      MGMT_SUB_ID: ${{ secrets.MGMT_SUB_ID_CANARY}}
      CONNECTIVITY_SUB_ID: ${{ secrets.CONNECTIVITY_SUB_ID_CANARY}}
      DFC_EMAIL_SECURITY_CONTACT: ${{ secrets.DFC_EMAIL_SECURITY_CONTACT_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}}
  deploy-onprem-canary:
    if: ${{ vars.ONPREM_CANARY == 'create-onprem-environment' }}
    name: "Deploy onprem infrastructure"
    needs: [alz-deploy-base-canary]
    uses: ./.github/workflows/deploy-onprem.yml
    with:
      environment: "canary"
      deploy: true
      location: "northeurope"
      nva: "opnsense-single"
      vpngw: ${{vars.VPNGW_CANARY}}
      activeDirectory: ${{vars.ONPREMAD_CANARY}}
    secrets:
      ONPREM_SUB_ID: ${{ secrets.ONPREM_SUB_ID_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}}
      CONNECTIVITY_SUB_ID: ${{ secrets.CONNECTIVITY_SUB_ID_CANARY}}
  alz-deploy-opnsense-canary:
    if: ${{ vars.NVA_CANARY == 'opnsense-single'  }}
    needs: [alz-deploy-base-canary]
    name: "Deploy OPNSense NVA - Canary"
    uses: ./.github/workflows/deploy-nva-opns.yml
    with:
      environment: "canary"
      deploy: true
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      wipeAfterDeploy: false
    secrets:
      CONNECTIVITY_SUB_ID: ${{ secrets.CONNECTIVITY_SUB_ID_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}} 
  alz-deploy-identity-canary:
    needs: 
      - alz-deploy-opnsense-canary
      - alz-deploy-base-canary
      - deploy-onprem-canary
    if: |
      always() && 
      (needs.alz-deploy-base-canary.result == 'skipped' || needs.alz-deploy-base-canary.result == 'success') &&
      (needs.alz-deploy-opnsense-canary.result == 'skipped' || needs.alz-deploy-opnsense-canary.result == 'success') &&
      (needs.deploy-onprem-canary.result == 'skipped' || needs.deploy-onprem-canary.result == 'success')
    name: "Deploy Identity - Canary"
    uses: ./.github/workflows/deploy-identity.yml
    with:
      environment: "canary"
      deploy: true
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      nva: ${{vars.NVA_CANARY}}
      vpngw: ${{vars.VPNGW_CANARY}}
      wipeAfterDeploy: false
      activeDirectory: ${{vars.AZUREAD_CANARY}}
    secrets:
      IDENTITY_SUB_ID: ${{ secrets.IDENTITY_SUB_ID_CANARY}}
      CONNECTIVITY_SUB_ID: ${{ secrets.CONNECTIVITY_SUB_ID_CANARY}}
      ONPREM_SUB_ID: ${{ secrets.ONPREM_SUB_ID_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}}    
  alz-deploy-amba-canary:
    needs: 
      - alz-deploy-identity-canary
    if: |
      always() && 
      (needs.alz-deploy-identity-canary.result == 'skipped' || needs.alz-deploy-identity-canary.result == 'success') 
    name: "Deploy AMBA - Canary"
    uses: ./.github/workflows/deploy-amba.yml
    with:
      environment: "canary"
      ambaRelease: "2025-04-04"
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      wipeAfterDeploy: false
    secrets:
      MGMT_SUB_ID: ${{ secrets.MGMT_SUB_ID_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}}
      AMBA_ACTIONGROUP_EMAIL: ${{ secrets.AMBA_ACTIONGROUP_EMAIL_CANARY}}
  alz-deploy-base-prod:
    needs: [alz-deploy-base-canary]
    name: "Deploy ALZ Base Components - Production"
    uses: ./.github/workflows/deploy-alz-base.yml
    with:
      environment: "prod"
      alzBicepRelease: "v0.22.1"
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      wipeAfterDeploy: false
      nva: ${{vars.NVA_CANARY}}
      vpngw: ${{vars.VPNGW_CANARY}}
    secrets:
      LOGGING_SUB_ID: ${{ secrets.LOGGING_SUB_ID_PROD }}
      IDENTITY_SUB_ID: ${{ secrets.IDENTITY_SUB_ID_PROD}}
      MGMT_SUB_ID: ${{ secrets.MGMT_SUB_ID_PROD}}
      CONNECTIVITY_SUB_ID: ${{ secrets.CONNECTIVITY_SUB_ID_PROD}}
      DFC_EMAIL_SECURITY_CONTACT: ${{ secrets.DFC_EMAIL_SECURITY_CONTACT_PROD}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_PROD}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_PROD}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_PROD}}
  alz-deploy-amba-prod:
    needs: [alz-deploy-base-prod]
    name: "Deploy AMBA - Prod"
    uses: ./.github/workflows/deploy-amba.yml
    with:
      environment: "prod"
      ambaRelease: "2025-04-04"
      managementGroupPrefix: "alz"
      location: "germanywestcentral"
      wipeAfterDeploy: false
    secrets:
      MGMT_SUB_ID: ${{ secrets.MGMT_SUB_ID_CANARY}}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID_CANARY}}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_CANARY}}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_CANARY}}
      AMBA_ACTIONGROUP_EMAIL: ${{ secrets.AMBA_ACTIONGROUP_EMAIL_PROD}}





