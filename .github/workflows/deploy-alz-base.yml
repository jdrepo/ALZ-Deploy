name: 1. Deploy ALZ Base Components 

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - ".github/workflows/deploy-alz-bicep-steps.yml"
  workflow_dispatch:
    inputs:
      environment:
        default: "canary"
        required: true
        type: string
      alzBicepRelease:
        default: "v0.20.2"
        required: true
        type: choice
        options:
          - "v0.19.4"
          - "v0.20.0"
          - "v0.20.1"
          - "v0.20.2"
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: 'germanywestcentral'
        type: string
      nva:
        description: 'NVA solution'
        default: 'azfirewall-basic'
        type: choice
        options:
          - opnsense-single
          - no-nva
          - azfirewall-basic
      vpngw:
        description: 'VPN Gateway'
        default: 'no-vpngw'
        type: choice
        options:
          - vpngw-bgp
          - vpngw-nobgp
          - no-vpngw
      wipeAfterDeploy:
        default: false
        type: boolean

  workflow_call:
    inputs:
      environment:
        default: "canary"
        required: true
        type: string
      alzBicepRelease:
        default: "v0.20.0"
        required: true
        type: string
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      nva:
        description: 'NVA solution'
        type: string
      vpngw:
        description: 'VPN Gateway type'
        type: string
        default: "vpngw-nobgp"
      wipeAfterDeploy:
        default: false
        type: boolean
    secrets:
      LOGGING_SUB_ID:
        required: false
      IDENTITY_SUB_ID:
        required: false
      MGMT_SUB_ID:
        required: false
      CONNECTIVITY_SUB_ID:
        required: false
      DFC_EMAIL_SECURITY_CONTACT:
        required: false
      AZURE_CLIENT_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false


env:
  alzBicepRelease: ${{inputs.alzBicepRelease}}
  ManagementGroupPrefix: ${{inputs.managementGroupPrefix}}
  ManagementGroupSuffix: "-${{inputs.environment}}"
  TopLevelManagementGroupDisplayName: "${{inputs.managementGroupPrefix}}-${{inputs.environment}}"
  Location: ${{inputs.location}}
  LoggingResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-logging-001"
  HubNetworkResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-hub-networking-001"
  HubPrivateDNSResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-privatedns"
  IdentityNetworkResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-identity-001"
  LoggingSubId: ${{ secrets.LOGGING_SUB_ID }}
  IdentitySubId: ${{ secrets.IDENTITY_SUB_ID }}
  MgmtSubId: ${{ secrets.MGMT_SUB_ID }}
  ConnectivitySubId: ${{ secrets.CONNECTIVITY_SUB_ID }}
  DefenderForCloudEmailSecurityContact: ${{ secrets.DFC_EMAIL_SECURITY_CONTACT }}
  runNumber: ${{ github.run_number }}

permissions:
  id-token: write
  contents: write

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run lint job
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Run bicep linter
        run: |
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/managementGroups/managementGroups.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/logging/logging.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/orchestration/mgDiagSettingsAll/mgDiagSettingsAll.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          az bicep build --file infra-as-code/bicep/modules/hubNetworking/hubNetworkingNva.${{inputs.nva}}.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
          az bicep build --file ALZ-Bicep/infra-as-code/bicep/modules/policy/assignments/alzDefaults/alzDefaultPolicyAssignments.bicep
          az bicep build --file infra-as-code/bicep/modules/policy/definitions/additionalCustomPolicyDefinitions.bicep
          az bicep build --file infra-as-code/bicep/modules/policy/assignments/alzCustoms/alzCustomPolicyAssignments.bicep
          az bicep build --file infra-as-code/bicep/modules/identityNetworking/identityNetworking.bicep
  validate_preview_create_mgs:
    runs-on: ubuntu-latest
    needs: [lint]
    name: Management Groups - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Management Groups - Validate
        id: deploy_mgs_validation
        shell: bash
        run: |
            az deployment tenant validate --template-file ALZ-Bicep/infra-as-code/bicep/modules/managementGroups/managementGroups.bicep \
            --parameters infra-as-code/bicep/modules/managementGroups/parameters/managementGroups.parameters.${{inputs.environment}}.json \
            --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
            --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
            --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
            --location ${{ env.Location }} --name deploy_mgs_validation-${{ env.runNumber }}
      - name: Management Groups - Preview
        id: deploy_mgs_preview
        shell: bash
        run: |
            az deployment tenant what-if --template-file ALZ-Bicep/infra-as-code/bicep/modules/managementGroups/managementGroups.bicep \
            --parameters infra-as-code/bicep/modules/managementGroups/parameters/managementGroups.parameters.${{inputs.environment}}.json \
            --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
            --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
            --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
            --location ${{ env.Location }} --name deploy_mgs_preview-${{ env.runNumber }} 
  deploy_create_mgs:
    runs-on: ubuntu-latest
    needs: [lint,validate_preview_create_mgs]
    environment: ${{inputs.environment}}
    name: Management Groups - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Management Groups - Deployment
        id: deploy_mgs_deployment
        shell: bash
        run: |
            az deployment tenant create --template-file ALZ-Bicep/infra-as-code/bicep/modules/managementGroups/managementGroups.bicep \
            --parameters infra-as-code/bicep/modules/managementGroups/parameters/managementGroups.parameters.${{inputs.environment}}.json \
            --parameters parTopLevelManagementGroupPrefix=${{ env.ManagementGroupPrefix }} \
            --parameters parTopLevelManagementGroupSuffix=${{ env.ManagementGroupSuffix }} \
            --parameters parTopLevelManagementGroupDisplayName="${{ env.TopLevelManagementGroupDisplayName }}" \
            --location ${{ env.Location }} --name deploy_mgs_deployment-${{ env.runNumber }}
  validate_preview_custom_policy_defs:
    runs-on: ubuntu-latest
    needs: [lint,deploy_create_mgs]
    name: Custom Policy Definitions - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # - name: Custom Policy Definitions - Validation
      #   id: deploy_custom_policy_defs_validation
      #   uses: azure/arm-deploy@v2
      #   with:
      #     scope: managementgroup
      #     managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
      #     region: ${{ env.Location }}
      #     template: ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
      #     parameters: >-
      #       infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.${{inputs.environment}}.json 
      #       parTargetManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
      #     deploymentName: deploy_custom_policy_defs_validation-${{ env.runNumber }}
      #     failOnStdErr: false
      #     deploymentMode: Validate
      - name: Custom Policy Definitions - Validation
        id: deploy_custom_policy_defs_validation
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: validate
          name: deploy_custom_policy_defs_validation-${{ env.runNumber }}
          location: ${{ env.Location }}
          scope: managementGroup
          management-group-id: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          template-file: ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          parameters-file: infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.${{inputs.environment}}.json 
          parameters: '{"parTargetManagementGroupId": "${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}" }'
      - name: Custom Policy Definitions - Preview
        id: deploy_custom_policy_defs_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.${{inputs.environment}}.json 
            parTargetManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}          
          deploymentName: deploy_custom_policy_defs_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_custom_policy_defs:
    runs-on: ubuntu-latest
    needs: [validate_preview_custom_policy_defs]
    environment: ${{inputs.environment}}  
    name: Custom Policy Definitions - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Custom Policy Definitions - Deploy
        id: deploy_custom_policy_defs_deploy
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/policy/definitions/customPolicyDefinitions.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/definitions/parameters/customPolicyDefinitions.parameters.${{inputs.environment}}.json 
            parTargetManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}          
          deploymentName: deploy_custom_policy_defs_deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_custom_role_definitions:
    runs-on: ubuntu-latest
    needs: [lint,deploy_custom_policy_defs]
    name: Custom Role Definitions - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Custom Role Definitions - Validation
        id: deploy_custom_role_definitions_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          parameters: >-
            infra-as-code/bicep/modules/customRoleDefinitions/parameters/customRoleDefinitions.parameters.${{inputs.environment}}.json 
            parAssignableScopeManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          deploymentName: deploy_custom_policy_defs_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Custom Role Definitions - Preview
        id: deploy_custom_policy_defs_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          parameters: >-
            infra-as-code/bicep/modules/customRoleDefinitions/parameters/customRoleDefinitions.parameters.${{inputs.environment}}.json 
            parAssignableScopeManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          deploymentName: deploy_custom_policy_defs_validation-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_custom_role_definitions:
    runs-on: ubuntu-latest
    needs: [validate_preview_custom_role_definitions]
    environment: ${{inputs.environment}}  
    name: Custom Role Definitions - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Custom Role Definitions - Deploy
        id: deploy_custom_role_definitions_deploy
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/customRoleDefinitions/customRoleDefinitions.bicep
          parameters: >-
            infra-as-code/bicep/modules/customRoleDefinitions/parameters/customRoleDefinitions.parameters.${{inputs.environment}}.json 
            parAssignableScopeManagementGroupId=${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          deploymentName: deploy_custom_policy_defs_validation-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_logging_rg:
    runs-on: ubuntu-latest
    needs: [deploy_custom_role_definitions]
    name: Logging Resource Group - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Logging RG - Validation
        id: deploy_logging_rg_validation
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.LoggingResourceGroupName }}
          deploymentName: deploy_logging_rg_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate     
      - name: Logging RG - Preview
        id: deploy_logging_rg_preview
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json 
            parResourceGroupName=${{ env.LoggingResourceGroupName }}
          deploymentName: deploy_logging_rg_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"     
  deploy_logging_rg:
    runs-on: ubuntu-latest
    needs: [validate_preview_logging_rg]
    environment: ${{inputs.environment}}
    name: Logging RG - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Logging RG - Deployment
        id: deploy_logging_rg_deploy
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json 
            parResourceGroupName=${{ env.LoggingResourceGroupName }}         
          deploymentName: deploy_logging_rg_deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_logging:
    runs-on: ubuntu-latest
    needs: [deploy_logging_rg]
    name: Logging Resources - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Logging Resources - Validation
        id: deploy_logging_validation
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/logging/logging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_logging-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Logging Resources - Preview
        id: deploy_logging_preview
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/logging/logging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_logging-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_logging:
    runs-on: ubuntu-latest
    needs: [validate_preview_logging]
    name: Logging Resources - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Logging Resources - Deployment
        id: deploy_logging_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/logging/logging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_logging-deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_mgDiagSettings:
    runs-on: ubuntu-latest
    needs: [deploy_logging]
    name: MG Diag Settings - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
      - name: MG Diag Settings - Validation
        id: deploy_mgDiagSettings_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/mgDiagSettingsAll/mgDiagSettingsAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/mgDiagSettingsAll/parameters/mgDiagSettingsAll.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
          deploymentName: deploy_mgDiagSettings-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: MG Diag Settings - Preview
        id: deploy_mgDiagSettings_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/mgDiagSettingsAll/mgDiagSettingsAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/mgDiagSettingsAll/parameters/mgDiagSettingsAll.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
          deploymentName: deploy_mgDiagSettings-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_mgDiagSettings:
    runs-on: ubuntu-latest
    needs: [validate_preview_mgDiagSettings]
    environment: ${{inputs.environment}}
    name: MG Diag Settings - Deploy
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
      - name: MG Diag Settings - Deploy
        id: deploy_mgDiagSettings_deploy
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/mgDiagSettingsAll/mgDiagSettingsAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/mgDiagSettingsAll/parameters/mgDiagSettingsAll.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
          deploymentName: deploy_mgDiagSettings-deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_hubNetwork_rg:
    runs-on: ubuntu-latest
    needs: [deploy_mgDiagSettings]
    name: Hub Network RG - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: HubNetwork RG - Validation
        id: deploy_hubNetworkRg_validation
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubNetworkResourceGroupName }}
          deploymentName: deploy_hubNetworkRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: HubNetwork RG - Preview
        id: deploy_hubNetworkRg_preview
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >- 
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubNetworkResourceGroupName }}
          deploymentName: deploy_hubNetworkRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_hubNetwork_rg:
    runs-on: ubuntu-latest
    needs: [validate_preview_hubNetwork_rg]
    name: Hub Network RG - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: HubNetwork RG - Deployment
        id: deploy_hubNetworkRg_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubNetworkResourceGroupName }}
          deploymentName: deploy_hubNetworkRg_deployment-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_privatedns_rg:
    runs-on: ubuntu-latest
    needs: [deploy_hubNetwork_rg]
    name: Deploy Private DNS RG - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Private DNS RG - Validation
        id: deploy_privateDnsRg_validation
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubPrivateDNSResourceGroupName }}
          deploymentName: deploy_privateDnsRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Deploy Private DNS RG - Preview
        id: deploy_privateDNSRg_preview
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >- 
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubPrivateDNSResourceGroupName  }}
          deploymentName: deploy_hubNetworkRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_privatedns_rg:
    runs-on: ubuntu-latest
    needs: [validate_preview_privatedns_rg]
    name: Deploy Private DNS RG
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Private DNS RG
        id: deploy_privateDnsRg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.HubPrivateDNSResourceGroupName }}
          deploymentName: deploy_privateDnsRg-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_hubNetwork_nva_req:
    runs-on: ubuntu-latest
    needs: [deploy_privatedns_rg]
    environment: ${{inputs.environment}}
    name: Deploy Hub Network NVA Requirements - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Show inputs
        run:  echo "${{ toJSON(github.event.inputs) }}"
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Hub Network NVA Requirements - Validation
        id: deploy_hubNetwork_nva_req_validation
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/hubNetworking/hubNetworkingNva.${{inputs.nva}}.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworkingNva.parameters.${{inputs.nva}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetworkNvaReq-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Deploy Hub Network NVA Requirements - Preview
        id: deploy_hubNetwork_nva_req_preview
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/hubNetworking/hubNetworkingNva.${{inputs.nva}}.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworkingNva.parameters.${{inputs.nva}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetworkNvaReq-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"   
  deploy_hubNetwork_nva_req:
    runs-on: ubuntu-latest
    needs: [validate_preview_hubNetwork_nva_req]
    environment: ${{inputs.environment}}
    name: Deploy Hub Network NVA Requirements - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Show inputs
        run:  echo "${{ toJSON(github.event.inputs) }}"
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Hub Network NAV Requirements - Deployment
        id: deploy_hubNetwork_nva_req_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/hubNetworking/hubNetworkingNva.${{inputs.nva}}.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworkingNva.parameters.${{inputs.nva}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetworkNvaReq-deployment-${{ env.runNumber }}
          failOnStdErr: false
      - name: Prepare opnSense deployment
        if: ${{ inputs.nva == 'opnsense-single'  }}
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{ env.ConnectivitySubId }}"
            opnSenseTrustedSubnetNsgName=$(jq -r .parameters.parOpnSenseTrustedSubnetNsgName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworkingNva.parameters.${{inputs.nva}}.${{inputs.environment}}.json)
            opnSenseTrustedSubnetNsgResourceId=$(az network nsg show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $opnSenseTrustedSubnetNsgName --query id --output tsv)
            echo "$opnSenseTrustedSubnetNsgResourceId"
            echo "opnSenseTrustedSubnetNsgResourceId=$opnSenseTrustedSubnetNsgResourceId" >> "$GITHUB_OUTPUT"
            opnSenseUntrustedSubnetNsgName=$(jq -r .parameters.parOpnSenseUntrustedSubnetNsgName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworkingNva.parameters.${{inputs.nva}}.${{inputs.environment}}.json)
            opnSenseUntrustedSubnetNsgResourceId=$(az network nsg show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $opnSenseUntrustedSubnetNsgName --query id --output tsv)
            echo "$opnSenseUntrustedSubnetNsgResourceId"
            echo "opnSenseUntrustedSubnetNsgResourceId=$opnSenseUntrustedSubnetNsgResourceId" >> "$GITHUB_OUTPUT"
            jq --arg id $opnSenseTrustedSubnetNsgResourceId '(.parameters.parSubnets.value[] | select(.name == "OPNS-Trusted")).networkSecurityGroupId |= $id' infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json > tmp1.json && mv tmp1.json infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json
            jq --arg id $opnSenseUntrustedSubnetNsgResourceId '(.parameters.parSubnets.value[] | select(.name == "OPNS-Untrusted")).networkSecurityGroupId |= $id' infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json > tmp2.json && mv tmp2.json infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json
      - name: Check for Changes
        id: check_changes
        run: |
          if [[ -n "$(git diff --exit-code)" ]]; then
            echo "Changes detected."
            echo "::set-output name=has_changes::true"
          else
            echo "No changes detected."
            echo "::set-output name=has_changes::false"
          fi
      - name: Commit and Push Changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          # configure user
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          # stage any file changes to be committed
          git add .

          # make commit with staged changes
          git commit -m 'files changed'

          # push the commit back up to source GitHub repository
          git push
  validate_preview_hubNetwork:
    runs-on: ubuntu-latest
    needs: [deploy_hubNetwork_nva_req]
    environment: ${{inputs.environment}}
    name: Deploy Hub Network - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Hub Network - Validation
        id: deploy_hubNetwork_validation
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetwork-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Deploy Hub Network - Preview
        id: deploy_hubNetwork_preview
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetwork-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"   
  deploy_hubNetwork:
    runs-on: ubuntu-latest
    needs: [validate_preview_hubNetwork]
    environment: ${{inputs.environment}}
    name: Deploy Hub Network - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Hub Network - Deployment
        id: deploy_hubNetwork_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.ConnectivitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.HubNetworkResourceGroupName }}
          #template: infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          template: ALZ-Bicep/infra-as-code/bicep/modules/hubNetworking/hubNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json
          deploymentName: deploy-hubNetwork-deployment-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_subPlacement:
    runs-on: ubuntu-latest
    needs: [deploy_hubNetwork]
    name: Deploy Sub Placement - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Sub Placement - Validation
        id: deploy_subPlacement_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/subPlacementAll/parameters/subPlacementAll.parameters.${{inputs.environment}}.json
            parPlatformManagementMgSubs="['${{ env.MgmtSubId }}']"
            parPlatformConnectivityMgSubs="['${{ env.ConnectivitySubId }}']"
            parPlatformIdentityMgSubs="['${{ env.IdentitySubId }}']"
          deploymentName: deploy_subPlacement-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Deploy Sub Placement - Preview
        id: deploy_subPlacement_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/subPlacementAll/parameters/subPlacementAll.parameters.${{inputs.environment}}.json
            parPlatformManagementMgSubs="['${{ env.MgmtSubId }}']"
            parPlatformConnectivityMgSubs="['${{ env.ConnectivitySubId }}']"
            parPlatformIdentityMgSubs="['${{ env.IdentitySubId }}']"
          deploymentName: deploy_subPlacement-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_subPlacement:
    runs-on: ubuntu-latest
    needs: [validate_preview_subPlacement]
    environment: ${{inputs.environment}}
    name: Deploy Sub Placement - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Sub Placement - Deployment
        id: deploy_subPlacement_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/orchestration/subPlacementAll/subPlacementAll.bicep
          parameters: >-
            infra-as-code/bicep/orchestration/subPlacementAll/parameters/subPlacementAll.parameters.${{inputs.environment}}.json
            parPlatformManagementMgSubs="['${{ env.MgmtSubId }}']"
            parPlatformConnectivityMgSubs="['${{ env.ConnectivitySubId }}']"
            parPlatformIdentityMgSubs="['${{ env.IdentitySubId }}']"
          deploymentName: deploy_subPlacement-validation-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_DefPol_Assignment:
    runs-on: ubuntu-latest
    needs: [deploy_subPlacement]
    name: Deploy Default Policy Assignment - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleVMInsightsName=$(jq -r .parameters.parDataCollectionRuleVMInsightsName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleChangeTrackingName=$(jq -r .parameters.parDataCollectionRuleChangeTrackingName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleMDFCSQLName=$(jq -r .parameters.parDataCollectionRuleMDFCSQLName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            userAssignedManagedIdentityName=$(jq -r .parameters.parUserAssignedManagedIdentityName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
            dataCollectionRuleVMInsightsId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleVMInsightsName --query id )
            dataCollectionRuleChangeTrackingResourceId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleChangeTrackingName --query id )
            dataCollectionRuleMDFCSQLId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleMDFCSQLName --query id )
            userAssignedManagedIdentityId=$(az identity show --resource-group ${{ env.LoggingResourceGroupName }} --name $userAssignedManagedIdentityName --query id)
            echo "$logAnalyticsWorkspaceResourceId"
            echo "$dataCollectionRuleVMInsightsId"
            echo "$dataCollectionRuleChangeTrackingResourceId"
            echo "$dataCollectionRuleMDFCSQLId"
            echo "$userAssignedManagedIdentityId"
            az account set -s "${{ env.ConnectivitySubId }}"            
            privateDnsResourceGroupId=$(az group show --name ${{ env.HubPrivateDNSResourceGroupName }} --query id)
            echo "$privateDnsResourceGroupId"
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleVMInsightsId=$dataCollectionRuleVMInsightsId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleChangeTrackingResourceId=$dataCollectionRuleChangeTrackingResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleMDFCSQLId=$dataCollectionRuleMDFCSQLId" >> "$GITHUB_OUTPUT"
            echo "userAssignedManagedIdentityId=$userAssignedManagedIdentityId" >> $GITHUB_OUTPUT
            echo "privateDnsResourceGroupId=$privateDnsResourceGroupId" >> "$GITHUB_OUTPUT"
      - name: Deploy Default Policy Assignment - Validation
        id: deploy_defPolAssignment_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/policy/assignments/alzDefaults/alzDefaultPolicyAssignments.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/assignments/alzDefaults/parameters/alzDefaultPolicyAssignments.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
            parDataCollectionRuleVMInsightsResourceId=${{ steps.get_resources.outputs.dataCollectionRuleVMInsightsId }}
            parDataCollectionRuleChangeTrackingResourceId=${{ steps.get_resources.outputs.dataCollectionRuleChangeTrackingResourceId }}
            parDataCollectionRuleMDFCSQLResourceId=${{ steps.get_resources.outputs.dataCollectionRuleMDFCSQLId }}
            parUserAssignedManagedIdentityResourceId=${{ steps.get_resources.outputs.userAssignedManagedIdentityId }}
            parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
            parPrivateDnsResourceGroupId=${{ steps.get_resources.outputs.privateDnsResourceGroupId }}
          deploymentName: deploy_defPolAssign_validate-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Deploy Default Policy Assignment - Preview
        id: deploy_defPolAssignment_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/policy/assignments/alzDefaults/alzDefaultPolicyAssignments.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/assignments/alzDefaults/parameters/alzDefaultPolicyAssignments.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
            parDataCollectionRuleVMInsightsResourceId=${{ steps.get_resources.outputs.dataCollectionRuleVMInsightsId }}
            parDataCollectionRuleChangeTrackingResourceId=${{ steps.get_resources.outputs.dataCollectionRuleChangeTrackingResourceId }}
            parDataCollectionRuleMDFCSQLResourceId=${{ steps.get_resources.outputs.dataCollectionRuleMDFCSQLId }}
            parUserAssignedManagedIdentityResourceId=${{ steps.get_resources.outputs.userAssignedManagedIdentityId }}
            parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
            parPrivateDnsResourceGroupId=${{ steps.get_resources.outputs.privateDnsResourceGroupId }}
          deploymentName: deploy_defPolAssign_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_DefPol_Assignment:
    runs-on: ubuntu-latest
    needs: [validate_preview_DefPol_Assignment]
    environment: ${{inputs.environment}}
    name: Deploy Default Policy Assignment - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleVMInsightsName=$(jq -r .parameters.parDataCollectionRuleVMInsightsName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleChangeTrackingName=$(jq -r .parameters.parDataCollectionRuleChangeTrackingName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            dataCollectionRuleMDFCSQLName=$(jq -r .parameters.parDataCollectionRuleMDFCSQLName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            userAssignedManagedIdentityName=$(jq -r .parameters.parUserAssignedManagedIdentityName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
            dataCollectionRuleVMInsightsId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleVMInsightsName --query id )
            dataCollectionRuleChangeTrackingResourceId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleChangeTrackingName --query id )
            dataCollectionRuleMDFCSQLId=$(az monitor data-collection rule show --resource-group ${{ env.LoggingResourceGroupName }} --name $dataCollectionRuleMDFCSQLName --query id )
            userAssignedManagedIdentityId=$(az identity show --resource-group ${{ env.LoggingResourceGroupName }} --name $userAssignedManagedIdentityName --query id)
            az account set -s "${{ env.ConnectivitySubId }}"
            privateDnsResourceGroupId=$(az group show --name ${{ env.HubPrivateDNSResourceGroupName }} --query id)
            echo "$logAnalyticsWorkspaceResourceId"
            echo "$dataCollectionRuleVMInsightsId"
            echo "$dataCollectionRuleChangeTrackingResourceId"
            echo "$dataCollectionRuleMDFCSQLId"
            echo "$userAssignedManagedIdentityId"
            echo "$privateDnsResourceGroupId"
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleVMInsightsId=$dataCollectionRuleVMInsightsId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleChangeTrackingResourceId=$dataCollectionRuleChangeTrackingResourceId" >> "$GITHUB_OUTPUT"
            echo "dataCollectionRuleMDFCSQLId=$dataCollectionRuleMDFCSQLId" >> "$GITHUB_OUTPUT"
            echo "userAssignedManagedIdentityId=$userAssignedManagedIdentityId" >> $GITHUB_OUTPUT
            echo "privateDnsResourceGroupId=$privateDnsResourceGroupId" >> "$GITHUB_OUTPUT"
      - name: Deploy Default Policy Assignment - Deployment
        id: deploy_defPolAssignment_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/policy/assignments/alzDefaults/alzDefaultPolicyAssignments.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/assignments/alzDefaults/parameters/alzDefaultPolicyAssignments.parameters.${{inputs.environment}}.json
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
            parDataCollectionRuleVMInsightsResourceId=${{ steps.get_resources.outputs.dataCollectionRuleVMInsightsId }}
            parDataCollectionRuleChangeTrackingResourceId=${{ steps.get_resources.outputs.dataCollectionRuleChangeTrackingResourceId }}
            parDataCollectionRuleMDFCSQLResourceId=${{ steps.get_resources.outputs.dataCollectionRuleMDFCSQLId }}
            parUserAssignedManagedIdentityResourceId=${{ steps.get_resources.outputs.userAssignedManagedIdentityId }}
            parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
            parPrivateDnsResourceGroupId=${{ steps.get_resources.outputs.privateDnsResourceGroupId }}
          deploymentName: deploy_defPolAssign_deployment-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_default_policy_exemptions:
    runs-on: ubuntu-latest
    needs: [deploy_DefPol_Assignment]
    name: Default Policy exemptions - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: ALZ-Deploy
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Policy exemptions - Validation
        id: deploy_default_policy_exemptions_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/alzDefaultPolicyExemptions.bicep
          parameters: >-
            ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/parameters/alzDefaultPolicyExcemptions.parameters.${{inputs.environment}}.json
          deploymentName: validate_default_policy_exemptions-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Default Policy exemptions - Preview
        id: deploy_default_policy_exemptions_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/alzDefaultPolicyExemptions.bicep
          parameters: >-
            ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/parameters/alzDefaultPolicyExcemptions.parameters.${{inputs.environment}}.json
          deploymentName: preview_default_policy_exemptions-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_default_policy_exemptions:
    runs-on: ubuntu-latest
    needs: [validate_preview_default_policy_exemptions]
    name: Default Policy exemptions - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: ALZ-Deploy
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Default Policy exemptions - Deployment
        id: deploy_default_policy_exemptions_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/alzDefaultPolicyExemptions.bicep
          parameters: >-
            ALZ-Deploy/infra-as-code/bicep/modules/policy/exemptions/parameters/alzDefaultPolicyExcemptions.parameters.${{inputs.environment}}.json
          deploymentName: deploy_default_policy_exemptions-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_networkwatcher_rg:
    runs-on: ubuntu-latest
    needs: [deploy_default_policy_exemptions]
    name: Network Watcher Resource Group - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Network Watcher RG - Validation
        id: deploy_networkwatcher_rg_validation
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName="NetworkWatcherRG"
          deploymentName: deploy_networkwatcher_rg_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate     
      - name: Network Watcher RG - Preview
        id: deploy_networkwatcher_rg_preview
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json 
            parResourceGroupName="NetworkWatcherRG"
          deploymentName: deploy_networkwatcher_rg_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"     
  deploy_networkwatcher_rg:
    runs-on: ubuntu-latest
    needs: [validate_preview_networkwatcher_rg]
    environment: ${{inputs.environment}}
    name: Network Watcher RG - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Logging RG - Deployment
        id: deploy_logging_rg_deploy
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json 
            parResourceGroupName="NetworkWatcherRG"
          deploymentName: deploy_networkwatcher_rg_deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_custom_logging:
    runs-on: ubuntu-latest
    needs: [deploy_networkwatcher_rg]
    name: Custom Logging Resources - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Custom Logging Resources - Validation
        id: deploy_custom_logging_validation
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: infra-as-code/bicep/modules/logging/customLogging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/customLogging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_custom_logging-validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Custom Logging Resources - Preview
        id: deploy_custom_logging_preview
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: infra-as-code/bicep/modules/logging/customLogging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/customLogging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_custom_logging-preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_custom_logging:
    runs-on: ubuntu-latest
    needs: [validate_preview_custom_logging]
    name: Custom Logging Resources - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Custom Logging Resources - Deployment
        id: deploy_custom_logging_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.LoggingSubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.LoggingResourceGroupName }}
          template: infra-as-code/bicep/modules/logging/customLogging.bicep
          parameters: >-
            infra-as-code/bicep/modules/logging/parameters/customLogging.parameters.${{inputs.environment}}.json
          deploymentName: deploy_custom_logging-deploy-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_CustPol_Assignment:
    runs-on: ubuntu-latest
    needs: [ deploy_custom_logging]
    name: Custom Policy Assignment - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.MgmtSubId}}"
            logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
            logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
            logStorageAccountResourceId=$(az storage account list --resource-group rg-alz-canary-logging-001 --query "[?contains(name,'sa')&&contains(name,'log') ].id" --output tsv)
            networkWatcherResourceId=$(az network watcher list --query "[].id" --output tsv)
            platformPrimaryLocation=$(jq -r .parameters.parLocation.value infra-as-code/bicep/modules/logging/parameters/customLogging.parameters.${{inputs.environment}}.json)
            az account set -s "${{env.ConnectivitySubId}}"
            hubNetworkName=$(jq -r .parameters.parHubNetworkName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
            hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
            echo "$hubNetworkResourceId"
            echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
            echo "$logAnalyticsWorkspaceResourceId"
            echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
            echo "$logStorageAccountResourceId"
            echo "logStorageAccountResourceId=$logStorageAccountResourceId" >> "$GITHUB_OUTPUT"
            echo "$networkWatcherResourceId"
            echo "networkWatcherResourceId=$networkWatcherResourceId" >> "$GITHUB_OUTPUT"
            echo "$platformPrimaryLocation"
            echo "platformPrimaryLocation=$platformPrimaryLocation" >> "$GITHUB_OUTPUT"
      - name: Custom Policy Assignment - Validation
        id: deploy_custPolAssignment_validation
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/policy/assignments/alzCustoms/alzCustomPolicyAssignments.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/assignments/alzCustoms/parameters/alzCustomPolicyAssignments.parameters.${{inputs.environment}}.json
            parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
            parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
            parLogStorageAccountResourceId=${{steps.get_resources.outputs.logStorageAccountResourceId}}
            parNetworkWatcherResourceId=${{steps.get_resources.outputs.networkWatcherResourceId}}
            parPlatformPrimaryLocation=${{steps.get_resources.outputs.platformPrimaryLocation}}
          deploymentName: deploy_custPolAssign_validate-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Custom Policy Assignment - Preview
        id: deploy_custfPolAssignment_preview
        uses: azure/arm-deploy@v2
        with:
          scope: managementgroup
          managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
          region: ${{ env.Location }}
          template: infra-as-code/bicep/modules/policy/assignments/alzCustoms/alzCustomPolicyAssignments.bicep
          parameters: >-
            infra-as-code/bicep/modules/policy/assignments/alzCustoms/parameters/alzCustomPolicyAssignments.parameters.${{inputs.environment}}.json
            parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
            parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
            parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
            parLogStorageAccountResourceId=${{steps.get_resources.outputs.logStorageAccountResourceId}}
            parNetworkWatcherResourceId=${{steps.get_resources.outputs.networkWatcherResourceId}}
            parPlatformPrimaryLocation=${{steps.get_resources.outputs.platformPrimaryLocation}}
          deploymentName: deploy_custPolAssign_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_CustPol_Assignment:
      runs-on: ubuntu-latest
      needs: [validate_preview_CustPol_Assignment]
      name: Custom Policy Assignment - Deployment
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: Checkout ALZ-Bicep Repo
          uses: actions/checkout@v4
          with:
            repository: Azure/ALZ-Bicep
            path: ALZ-Bicep
            ref: ${{ env.alzBicepRelease }}
        - name: Show env
          run: env | sort
        - name: Azure Login with OIDC
          uses: azure/login@v2
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        - name: Get existing resources
          id: get_resources
          uses: azure/cli@v2
          with:
            azcliversion: latest
            inlineScript: |
              az account set -s "${{env.MgmtSubId}}"
              logAnalyticsWorkspaceName=$(jq -r .parameters.parLogAnalyticsWorkspaceName.value infra-as-code/bicep/modules/logging/parameters/logging.parameters.${{inputs.environment}}.json)
              logAnalyticsWorkspaceResourceId=$(az monitor log-analytics workspace show --resource-group ${{ env.LoggingResourceGroupName }} --name $logAnalyticsWorkspaceName --query id)
              logStorageAccountResourceId=$(az storage account list --resource-group rg-alz-canary-logging-001 --query "[?contains(name,'sa')&&contains(name,'log') ].id" --output tsv)
              networkWatcherResourceId=$(az network watcher list --query "[].id" --output tsv)
              platformPrimaryLocation=$(jq -r .parameters.parLocation.value infra-as-code/bicep/modules/logging/parameters/customLogging.parameters.${{inputs.environment}}.json)
              az account set -s "${{env.ConnectivitySubId}}"
              hubNetworkName=$(jq -r .parameters.parHubNetworkName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
              hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
              echo "$hubNetworkResourceId"
              echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
              echo "$logAnalyticsWorkspaceResourceId"
              echo "logAnalyticsWorkspaceResourceId=$logAnalyticsWorkspaceResourceId" >> "$GITHUB_OUTPUT"
              echo "$logStorageAccountResourceId"
              echo "logStorageAccountResourceId=$logStorageAccountResourceId" >> "$GITHUB_OUTPUT"
              echo "$networkWatcherResourceId"
              echo "networkWatcherResourceId=$networkWatcherResourceId" >> "$GITHUB_OUTPUT"
              echo "$platformPrimaryLocation"
              echo "platformPrimaryLocation=$platformPrimaryLocation" >> "$GITHUB_OUTPUT"
        - name: Custom Policy Assignment - Deployment
          id: deploy_custPolAssignment_deployment
          uses: azure/arm-deploy@v2
          with:
            scope: managementgroup
            managementGroupId: ${{ env.ManagementGroupPrefix }}${{ env.ManagementGroupSuffix }}
            region: ${{ env.Location }}
            template: infra-as-code/bicep/modules/policy/assignments/alzCustoms/alzCustomPolicyAssignments.bicep
            parameters: >-
              infra-as-code/bicep/modules/policy/assignments/alzCustoms/parameters/alzCustomPolicyAssignments.parameters.${{inputs.environment}}.json
              parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
              parMsDefenderForCloudEmailSecurityContact=${{env.DefenderForCloudEmailSecurityContact}}
              parLogAnalyticsWorkspaceResourceId=${{ steps.get_resources.outputs.logAnalyticsWorkspaceResourceId}}
              parLogStorageAccountResourceId=${{steps.get_resources.outputs.logStorageAccountResourceId}}
              parNetworkWatcherResourceId=${{steps.get_resources.outputs.networkWatcherResourceId}}
              parPlatformPrimaryLocation=${{steps.get_resources.outputs.platformPrimaryLocation}}
            deploymentName: deploy_custPolAssign-deployment${{ env.runNumber }}
            failOnStdErr: false
  validate_preview_identityNetwork_rg:
    runs-on: ubuntu-latest
    needs: [deploy_CustPol_Assignment]
    name: Identity Network RG - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: IdentityNetwork RG - Validation
        id: deploy_identityNetworkRg_validation
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.IdentityNetworkResourceGroupName }}
          deploymentName: deploy_identityNetworkRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Identity RG - Preview
        id: deploy_identityNetworkRg_preview
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >- 
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.IdentityNetworkResourceGroupName }}
          deploymentName: deploy_identityNetworkRg_validation-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_identityNetwork_rg:
    runs-on: ubuntu-latest
    needs: [validate_preview_identityNetwork_rg]
    name: Identity Network RG - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: IdentityNetwork RG - Deployment
        id: deploy_identityNetworkRg_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          template: ALZ-Bicep/infra-as-code/bicep/modules/resourceGroup/resourceGroup.bicep
          parameters: >-
            infra-as-code/bicep/modules/resourceGroup/parameters/resourceGroup.parameters.${{inputs.environment}}.json
            parResourceGroupName=${{ env.IdentityNetworkResourceGroupName }}
          deploymentName: deploy_identityNetworkRg_deployment-${{ env.runNumber }}
          failOnStdErr: false
  validate_preview_identityNetwork:
    runs-on: ubuntu-latest
    needs: [deploy_identityNetwork_rg]
    environment: ${{inputs.environment}}
    name: Identity Network - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.ConnectivitySubId}}"
            hubNetworkName=$(jq -r .parameters.parHubNetworkName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
            hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
            echo "$hubNetworkResourceId"
            echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
      - name: Identity Network - Validation
        id: deploy_identityNetwork_validation
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/identityNetworking/identityNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/identityNetworking/parameters/identityNetworking.parameters.${{inputs.nva}}.${{inputs.environment}}.json            
            parHubNetworkResourceId=${{steps.get_resources.outputs.hubNetworkResourceId}}
          deploymentName: deploy_identityNetwork_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
      - name: Identity Network - Preview
        id: deploy_identityNetwork_preview
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/identityNetworking/identityNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/identityNetworking/parameters/identityNetworking.parameters.${{inputs.nva}}.${{inputs.environment}}.json    
            parHubNetworkResourceId=${{steps.get_resources.outputs.hubNetworkResourceId}}
          deploymentName: deploy_identityNetwork_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"   
  deploy_identityNetwork:
    runs-on: ubuntu-latest
    needs: [validate_preview_identityNetwork]
    environment: ${{inputs.environment}}
    name: Identity Network - Deployment
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Get existing resources
        id: get_resources
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{env.ConnectivitySubId}}"
            hubNetworkName=$(jq -r .parameters.parHubNetworkName.value infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
            hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
            echo "$hubNetworkResourceId"
            echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
      - name: Identity Network - Deployment
        id: deploy_identityNetwork_deployment
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: infra-as-code/bicep/modules/identityNetworking/identityNetworking.bicep
          parameters: >-
            infra-as-code/bicep/modules/identityNetworking/parameters/identityNetworking.parameters.${{inputs.nva}}.${{inputs.environment}}.json      
            parHubNetworkResourceId=${{steps.get_resources.outputs.hubNetworkResourceId}}
          deploymentName: deploy_identityNetwork_deployment-${{ env.runNumber }}
          failOnStdErr: false
  wipe:
    runs-on: ubuntu-latest
    if: ${{ inputs.wipeAfterDeploy }}
    needs: [deploy_identityNetwork]
    environment: wipe
    steps:
      - run: echo "Here is where you'd perform the steps to wipe."
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Checkout ALZ-Bicep Repo
        uses: actions/checkout@v4
        with:
          repository: Azure/ALZ-Bicep
          path: ALZ-Bicep
          ref: ${{ env.alzBicepRelease }}
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
      - name: Cleaning up ALZ deployments
        uses: azure/powershell@v2
        with:
          inlineScript: | 
            ./scripts/Wipe-ESLZAzTenantUnattended.ps1 -tenantRootGroupID ${{ secrets.AZURE_TENANT_ID }} -intermediateRootGroupID "${{ env.ManagementGroupPrefix}}${{ env.ManagementGroupSuffix}}" -resetMdfcTierOnSubs:$true
          azPSVersion: "latest" 
