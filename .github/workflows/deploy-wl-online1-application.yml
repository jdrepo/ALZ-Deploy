name: 10a. Deploy Workload Online 1 - Application Team

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy after preview'
        #default: false
        type: boolean
      environment:
        description: 'Environment'
        default: "canary"
        required: true
        type: string
      location:
        description: 'Location'
        default: "germanywestcentral"
        type: string
      nva:
        description: 'NVA solution'
        default: 'no-nva'
        type: choice
        options:
          - opnsense-single
          - opnsense-ha
          - no-nva
          - azfirewall-basic
          - ubuntu-single
      vpngw:
        description: 'VPN Gateway'
        default: 'no-vpngw'
        type: choice
        options:
          - vpngw-bgp
          - vpngw-nobgp
          - no-vpngw
      vnetrg:
        description: 'Spoke VNet Resource Group'
        type: string
        default: 'rg-alz-workload-online-001-spoke-gwc'
      vnetname:
        description: 'Spoke VNet Name'
        type: string
        default: 'vnet-gwc-workload-online-001'
      certcn:
        description: 'Certificate common name'
        type: string
        default: '*.app01.schoolscloud.eu'



  workflow_call:
    inputs:
      deploy:
        description: 'Deploy after preview'
        default: false
        type: boolean
      environment:
        default: "canary"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      nva:
        description: 'NVA solution'
        type: string
      vpngw:
        description: 'VPN Gateway type'
        type: string
      vnetrg:
        description: 'Spoke VNet Resource Group'
        type: string
        default: 'rg-alz-workload-online-001-spoke-gwc'
      vnetname:
        description: 'Spoke VNet Name'
        type: string
        default: 'vnet-gwc-workload-online-001'
      certcn:
        description: 'Certificate common name'
        type: string
        default: '*.app01.schoolscloud.eu'

    secrets:
      WL_OL1_SUB_ID:
        required: false
      AZURE_CLIENT_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
      

env:
  workloadSubscriptionId: ${{secrets.WL_OL1_SUB_ID}}
  location: ${{inputs.location}}
  runNumber: ${{ github.run_number }}
  vnetName: '${{inputs.vnetname}}-${{inputs.environment}}'
  vnetRg: '${{inputs.vnetrg}}-${{inputs.environment}}'
  appRgName: 'rg-alz-workload-online-001-compute-gwc-${{inputs.environment}}'
  acmeBotRgName: 'rg-alz-workload-online-001-acmebot-gwc-${{inputs.environment}}'



permissions:
  id-token: write
  contents: read

jobs:
  validate_preview_rgs:
    runs-on: ubuntu-latest
    name: Resource Groups - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: 'ALZ-Deploy'
      - name: Checkout Repo bicep-registry-modules
        uses: actions/checkout@v4
        with:
            repository: Azure/bicep-registry-modules
            path: 'bicep-registry-modules'
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Acmebot RG - Validation
        id: acmebot_rg_validation
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: validate
          name: validate_acmebot_rg-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-acmebot-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.acmeBotRgName }}
            location: ${{ env.location }}
      - name: Acmebot RG - Preview
        id: acmebot_rg_preview
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: whatIf
          name: preview_acmebot_rg-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-acmebot-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.acmeBotRgName }}
            location: ${{ env.location }}
      - name: Compute RG - Validation
        id: compute_rg_validate
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: validate
          name: validate_compute_rg-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-compute-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.appRgName }}
            location: ${{ env.location }}
      - name: Compute RG - Preview
        id: compute_rg_preview
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: whatIf
          name: preview_compute_rg-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-compute-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.appRgName }}
            location: ${{ env.location }}
  deploy_rgs:
    runs-on: ubuntu-latest
    needs: validate_preview_rgs
    name: Resource Groups - Deploy
    if: ${{ inputs.deploy == true }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: 'ALZ-Deploy'
      - name: Checkout Repo bicep-registry-modules
        uses: actions/checkout@v4
        with:
            repository: Azure/bicep-registry-modules
            path: 'bicep-registry-modules'
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: AcmeBot RG - Deploy
        id: acmebot_rg_deploy
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: create
          name: acmebot_rg_deploy-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-acmebot-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.acmeBotRgName }}
            location: ${{ env.location }}
      - name: Compute RG - Deploy
        id: compute_rg_deploy
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: create
          name: compute_rg_deploy-${{env.runNumber}}
          location: ${{ env.location }}
          scope: subscription
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-compute-workload-online1.parameters.${{inputs.environment}}.json
          parameters: |
            name: ${{ env.appRgName }}
            location: ${{ env.location }}
  acmebot_validation_preview:
    runs-on: ubuntu-latest
    needs: deploy_rgs
    environment: ${{inputs.environment}}
    name: Key Vault Acmebot - Validation and Preview
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: 'ALZ-Deploy'
      - name: Checkout Repo bicep-registry-modules
        uses: actions/checkout@v4
        with:
            repository: Azure/bicep-registry-modules
            path: 'bicep-registry-modules'
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Key Vault Acmebot - Validate
        id: kv_acmebot_validate
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: validate
          name: kv_acmebot_validate-${{env.runNumber}}
          scope: resourceGroup
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          resource-group-name: ${{ env.acmeBotRgName }}
          template-file: ./ALZ-Deploy/workloads/workload-online1/kv-acmebot.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/kv-acmebot.parameters.${{inputs.environment}}.json
          parameters: |
            parVnetResourceId: '/subscriptions/${{secrets.WL_OL1_SUB_ID}}/resourceGroups/${{inputs.vnetrg}}/providers/Microsoft.Network/virtualNetworks/${{inputs.vnetrg}}'
      - name: Key Vault Acmebot - Preview
        id: kv_acmebot_preview
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: whatIf
          name: kv_acmebot_preview-${{env.runNumber}}
          scope: resourceGroup
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          resource-group-name: ${{ env.acmeBotRgName }}
          template-file: ./ALZ-Deploy/workloads/workload-online1/kv-acmebot.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/kv-acmebot.parameters.${{inputs.environment}}.json
          parameters: |
            parVnetResourceId: '/subscriptions/${{secrets.WL_OL1_SUB_ID}}/resourceGroups/${{inputs.vnetrg}}/providers/Microsoft.Network/virtualNetworks/${{inputs.vnetrg}}'
            
  acmebot_deploy:
    runs-on: ubuntu-latest
    needs: acmebot_validation_preview
    if: ${{ inputs.deploy == true }}
    environment: ${{inputs.environment}}
    name: Key Vault Acmebot - Deploy
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: 'ALZ-Deploy'
      - name: Checkout Repo bicep-registry-modules
        uses: actions/checkout@v4
        with:
            repository: Azure/bicep-registry-modules
            path: 'bicep-registry-modules'
      - name: Show env
        run: env | sort
      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Key Vault Acmebot - Deploy
        id: kv_acmebot_deploy
        uses: azure/bicep-deploy@v2
        with:
          type: deployment
          operation: create
          name: kv_acmebot_deploy-${{env.runNumber}}
          scope: resourceGroup
          subscription-id: ${{secrets.WL_OL1_SUB_ID}}
          resource-group-name: ${{ env.acmeBotRgName }}
          template-file: ./ALZ-Deploy/workloads/workload-online1/kv-acmebot.bicep
          parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/kv-acmebot.parameters.${{inputs.environment}}.json
          parameters: |
            parVnetResourceId: '/subscriptions/${{secrets.WL_OL1_SUB_ID}}/resourceGroups/${{inputs.vnetrg}}/providers/Microsoft.Network/virtualNetworks/${{inputs.vnetrg}}'
      - name: Get function app key
        id: fix_function_auth
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account set -s "${{secrets.WL_OL1_SUB_ID}}"
            FUNCTION_APP_KEY=$(az functionapp keys list -n ${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}} -g ${{ env.acmeBotRgName }} --query functionKeys.default --output tsv)
            echo "::add-mask::$FUNCTION_APP_KEY"
            echo "FUNCTION_APP_KEY=$FUNCTION_APP_KEY" >> $GITHUB_ENV
            # echo output1 $FUNCTION_APP_KEY | sed 's/./& /g'
      - name: Create certificate request with curl
        id: create_cert_request_curl
        shell: bash
        run: |
          #echo  output2 ${{env.FUNCTION_APP_KEY}} | sed 's/./& /g'
          az account set -s "${{secrets.WL_OL1_SUB_ID}}"
          az config set extension.use_dynamic_install=yes_without_prompt --only-show-errors -o none
          az extension add --name authV2 --only-show-errors -o none
          az webapp auth update -n ${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}} -g ${{ env.acmeBotRgName }} --enabled false --only-show-errors -o none
          echo "sleep for 10 seconds for auth settings"
          sleep 10
          echo "Get all assigned certificates"
          certs=$(curl --no-progress-meter -H "X-Functions-Key: ${{env.FUNCTION_APP_KEY}}" https://${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}}.azurewebsites.net/api/certificates ) 
          echo "Assigned certificates: $(echo $certs | jq .)"
          certexists=$(echo $certs | jq '.[]  | select( .dnsNames | contains(["${{inputs.certcn}}"]))')
          echo "Existing certificates: $(echo $certexists | jq .)" 
          if [ -n "$certexists" ]; 
            then echo "Certificate for ${{inputs.certcn}} already exists"
          else
            echo "Request new cert for: ${{inputs.certcn}}"
            curl --no-progress-meter -X POST -H "X-Functions-Key: ${{env.FUNCTION_APP_KEY}}" -H "Content-Type: application/json" https://${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}}.azurewebsites.net/api/certificate  -d '{ "DnsNames": [ "${{inputs.certcn}}" ] }' | jq .
          fi
          az webapp auth update -n ${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}} -g ${{ env.acmeBotRgName }} --enabled true --only-show-errors -o none          
      # - name: Create certificate request with PowerShell
      #   id: create_cert_request_ps
      #   shell: pwsh
      #   run: |
      #     $Header = @{"X-Functions-Key" = "${{env.FUNCTION_APP_KEY}}"}
      #     $Parameters = @{
      #         Method      = "GET"
      #         Uri         = "https://${{steps.kv_acmebot_deploy.outputs.acmeBotAppName}}.azurewebsites.net/api/certificates"
      #         Headers     = $Header
      #       }
      #     Invoke-RestMethod @Parameters 
  # validate_preview_compute_rg:
  #   runs-on: ubuntu-latest
  #   name: Compute Resource Group - Validation and Preview
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v4
  #       with:
  #         path: 'ALZ-Deploy'
  #     - name: Checkout Repo bicep-registry-modules
  #       uses: actions/checkout@v4
  #       with:
  #           repository: Azure/bicep-registry-modules
  #           path: 'bicep-registry-modules'
  #     - name: Show env
  #       run: env | sort
  #     - name: Azure Login with OIDC
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
  # deploy_compute_rg:
  #   runs-on: ubuntu-latest
  #   needs: validate_preview_compute_rg
  #   name: Compute Resource Group - Deploy
  #   if: ${{ inputs.deploy == true }}
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v4
  #       with:
  #         path: 'ALZ-Deploy'
  #     - name: Checkout Repo bicep-registry-modules
  #       uses: actions/checkout@v4
  #       with:
  #           repository: Azure/bicep-registry-modules
  #           path: 'bicep-registry-modules'
  #     - name: Show env
  #       run: env | sort
  #     - name: Azure Login with OIDC
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #     - name: Compute RG - Deploy
  #       id: compute_rg_deploy
  #       uses: azure/bicep-deploy@v2
  #       with:
  #         type: deployment
  #         operation: create
  #         name: compute_rg_deploy-${{env.runNumber}}
  #         location: ${{ env.location }}
  #         scope: subscription
  #         subscription-id: ${{secrets.WL_OL1_SUB_ID}}
  #         template-file: ./bicep-registry-modules/avm/res/resources/resource-group/main.bicep
  #         parameters-file: ./ALZ-Deploy/workloads/workload-online1/parameters/rg-compute-workload-online1.parameters.${{inputs.environment}}.json
  #         parameters: |
  #           name: ${{ env.appRgName }}
  #           location: ${{ env.location }}
          

