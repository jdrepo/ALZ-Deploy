name: 4. Deploy Identity to ALZ environment 

on:
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy after preview'
        default: false
        type: boolean
      environment:
        default: "canary"
        required: true
        type: string
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      nva:
        description: 'NVA solution'
        type: choice
        options:
          - opnsense-single
          - no-nva
          - azfirewall-basic
      vpngw:
        description: 'VPN Gateway'
        default: 'no-vpngw'
        type: choice
        options:
          - vpngw-bgp
          - vpngw-nobgp
          - no-vpngw
      activeDirectory:
        description: 'Active Directory Scenario'
        default: 'create-identity-domain'
        type: choice
        options:
          - create-identity-domain
          - use-onprem-domain
          - no-identity-domain
      wipeAfterDeploy:
        default: false
        type: boolean

  workflow_call:
    inputs:
      deploy:
        description: 'Deploy after preview'
        default: false
        type: boolean
      environment:
        default: "canary"
        required: true
        type: string
      managementGroupPrefix:
        default: "alz"
        required: true
        type: string
      location:
        default: "germanywestcentral"
        type: string
      nva:
        description: 'NVA solution'
        type: string
      vpngw:
        description: 'VPN Gateway type'
        type: string
        default: "vpngw-nobgp"
      activeDirectory:
        description: 'Active Directory Scenario'
        type: string
        default: 'create-identity-domain'
      wipeAfterDeploy:
        default: false
        type: boolean
    secrets:
      IDENTITY_SUB_ID:
        required: false
      CONNECTIVITY_SUB_ID:
        required: false
      AZURE_CLIENT_ID:
        required: false
      AZURE_TENANT_ID:
        required: false
      AZURE_SUBSCRIPTION_ID:
        required: false
env:
  ManagementGroupPrefix: ${{inputs.managementGroupPrefix}}
  ManagementGroupSuffix: "-${{inputs.environment}}"
  IdentitySubscriptionId: ${{secrets.IDENTITY_SUB_ID}}
  ConnectivitySubscriptionId: ${{secrets.CONNECTIVITY_SUB_ID}}
  IdentityNetworkResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-identity-001"
  HubNetworkResourceGroupName: "rg-${{inputs.managementGroupPrefix}}-${{inputs.environment}}-hub-networking-001"
  Location: ${{inputs.location}}
  runNumber: ${{ github.run_number }}

permissions:
  id-token: write
  contents: read

jobs:
  validate_preview_identity:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    name: Deploy Identity - Validation and Preview
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        path: 'ALZ-Deploy'
    - name: Checkout Repo bicep-registry-modules
      uses: actions/checkout@v4
      with:
          repository: Azure/bicep-registry-modules
          path: 'bicep-registry-modules'
    - name: Azure Login with OIDC
      uses: azure/login@v2
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Get existing resources
      id: get_resources
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account set -s "${{env.IdentitySubscriptionId}}"
          identityNetworkName=$(jq -r .parameters.parIdentityNetworkName.value ./ALZ-Deploy/infra-as-code/bicep/modules/identityNetworking/parameters/identityNetworking.parameters.${{inputs.nva}}.${{inputs.environment}}.json) 
          identityNetworkResourceId=$(az network vnet show --resource-group ${{ env.IdentityNetworkResourceGroupName }} --name $identityNetworkName --query id)
          echo "$identityNetworkResourceId"
          echo "identityNetworkResourceId=$identityNetworkResourceId" >> $GITHUB_OUTPUT
          az account set -s "${{env.ConnectivitySubscriptionId}}"
          hubNetworkName=$(jq -r .parameters.parHubNetworkName.value ./ALZ-Deploy/infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
          hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
          echo "$hubNetworkResourceId"
          echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
    - name: Deploy Identity - Validation
      id: deploy_identity_validation
      uses: azure/arm-deploy@v2
      with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubscriptionId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: ./ALZ-Deploy/infra-as-code/bicep/modules/identity/identity.bicep
          parameters: >-
            ./ALZ-Deploy/infra-as-code/bicep/modules/identity/parameters/identity.parameters.${{inputs.environment}}.json
            parIdentityVnetResourceId=${{steps.get_resources.outputs.identityNetworkResourceId}}
            parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
            parHubVpnGateway=${{inputs.vpngw}}
            parActiveDirectoryScenario=${{inputs.activeDirectory}}
            parAdminUserName="domadmin"
          deploymentName: deploy_identity_validation-${{ env.runNumber }}
          failOnStdErr: false
          deploymentMode: Validate
    - name: Deploy Identity - Preview
      id: deploy_identity_preview
      uses: azure/arm-deploy@v2
      with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubscriptionId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: ./ALZ-Deploy/infra-as-code/bicep/modules/identity/identity.bicep
          parameters: >-
            ./ALZ-Deploy/infra-as-code/bicep/modules/identity/parameters/identity.parameters.${{inputs.environment}}.json
            parIdentityVnetResourceId=${{steps.get_resources.outputs.identityNetworkResourceId}}
            parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
            parHubVpnGateway=${{inputs.vpngw}}
            parActiveDirectoryScenario=${{inputs.activeDirectory}}
            parAdminUserName="domadmin"
          deploymentName: deploy_identity_preview-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--what-if"
  deploy_identity:
    if: ${{ inputs.deploy }}
    runs-on: ubuntu-latest
    needs: [validate_preview_identity]
    environment: ${{inputs.environment}}
    name: Deploy Identity
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        path: 'ALZ-Deploy'
    - name: Checkout Repo bicep-registry-modules
      uses: actions/checkout@v4
      with:
          repository: Azure/bicep-registry-modules
          path: 'bicep-registry-modules' 
    - name: Azure Login with OIDC
      uses: azure/login@v2
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Get existing resources
      id: get_resources
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account set -s "${{env.IdentitySubscriptionId}}"
          identityNetworkName=$(jq -r .parameters.parIdentityNetworkName.value ./ALZ-Deploy/infra-as-code/bicep/modules/identityNetworking/parameters/identityNetworking.parameters.${{inputs.nva}}.${{inputs.environment}}.json) 
          identityNetworkResourceId=$(az network vnet show --resource-group ${{ env.IdentityNetworkResourceGroupName }} --name $identityNetworkName --query id)
          echo "$identityNetworkResourceId"
          echo "identityNetworkResourceId=$identityNetworkResourceId" >> $GITHUB_OUTPUT
          az account set -s "${{env.ConnectivitySubscriptionId}}"
          hubNetworkName=$(jq -r .parameters.parHubNetworkName.value ./ALZ-Deploy/infra-as-code/bicep/modules/hubNetworking/parameters/hubNetworking.parameters.${{inputs.nva}}.${{inputs.vpngw}}.${{inputs.environment}}.json) 
          hubNetworkResourceId=$(az network vnet show --resource-group ${{ env.HubNetworkResourceGroupName }} --name $hubNetworkName --query id)
          echo "$hubNetworkResourceId"
          echo "hubNetworkResourceId=$hubNetworkResourceId" >> "$GITHUB_OUTPUT"
    - name: Deploy Identity
      id: deploy_identity
      uses: azure/arm-deploy@v2
      with:
          scope: resourcegroup
          subscriptionId: ${{ env.IdentitySubscriptionId }}
          region: ${{ env.Location }}
          resourceGroupName: ${{ env.IdentityNetworkResourceGroupName }}
          template: ./ALZ-Deploy/infra-as-code/bicep/modules/identity/identity.bicep
          parameters: >-
            ./ALZ-Deploy/infra-as-code/bicep/modules/identity/parameters/identity.parameters.${{inputs.environment}}.json
            parIdentityVnetResourceId=${{steps.get_resources.outputs.identityNetworkResourceId}}
            parHubNetworkResourceId=${{ steps.get_resources.outputs.hubNetworkResourceId}}
            parHubVpnGateway=${{inputs.vpngw}}
            parActiveDirectoryScenario=${{inputs.activeDirectory}}
            parAdminUserName="domadmin"
          deploymentName: deploy_identity-${{ env.runNumber }}
          failOnStdErr: false
          additionalArguments: "--verbose"
    - name: Get Deployment output
      id: deploy_identity_output
      shell: bash
      run: | 
        echo "KeyVault: ${{ steps.deploy_identity.outputs.kv1ResourceId}}"




